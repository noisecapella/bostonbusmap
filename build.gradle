// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        mavenCentral()
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.1'
    }
}

apply plugin: 'com.android.application'

repositories {
    mavenCentral()
    jcenter()
    google()
}

dependencies {
    implementation 'androidx.annotation:annotation:1.0.0'
    implementation 'com.google.code.gson:gson:+'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.google.android.gms:play-services-base:17.+'
    implementation 'com.google.android.gms:play-services-location:17.+'
    implementation 'com.google.android.gms:play-services-maps:17.+'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.guava:guava:22.0-android'
    implementation 'com.google.code.findbugs:jsr305:1.3.9'

    implementation 'com.android.support:support-annotations:27+'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.google.protobuf:protobuf-lite:3.0.1'
}

android {
    compileSdkVersion 28
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFile 'proguard-project.txt'
            debuggable false
        }

    }
    sourceSets {
        main {
            manifest.srcFile './AndroidManifest.xml'
            java {
                srcDir 'src'
            }
            res {
                srcDir 'res'
            }
        }
    }
    signingConfigs {
        release {
            release {
                // these are fake values which are just put here so installRelease exists as a task. The afterEvaluate block will fill these in with real values
                keyAlias 'alias'
                keyPassword 'password'
                storeFile file('../xyz.jks')
                storePassword 'password'
            }
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
    testOptions.unitTests.includeAndroidResources true
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 32
    }
}

allprojects {
    repositories {
        mavenCentral()
        jcenter()
        google()
    }
    afterEvaluate { project ->
        def propsFile = rootProject.file('keystore.properties')
        def configName = 'release'

        if (propsFile.exists() && android.signingConfigs.hasProperty(configName)) {
            def props = new Properties()
            props.load(new FileInputStream(propsFile))
            android.signingConfigs[configName].storeFile = file(props['storeFile'])
            android.signingConfigs[configName].storePassword = props['storePassword']
            android.signingConfigs[configName].keyAlias = props['keyAlias']
            android.signingConfigs[configName].keyPassword = props['keyPassword']

            android.buildTypes[configName].signingConfig = android.signingConfigs[configName]
        }
    }
}
